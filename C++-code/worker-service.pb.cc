// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: worker-service.proto
// Protobuf C++ Version: 5.29.3

#include "worker-service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace worker {

inline constexpr WorkerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_to_process_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkerRequest::WorkerRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkerRequestDefaultTypeInternal() {}
  union {
    WorkerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkerRequestDefaultTypeInternal _WorkerRequest_default_instance_;

inline constexpr WorkerReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : processed_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkerReply::WorkerReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkerReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkerReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkerReplyDefaultTypeInternal() {}
  union {
    WorkerReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkerReplyDefaultTypeInternal _WorkerReply_default_instance_;
}  // namespace worker
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_worker_2dservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_worker_2dservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_worker_2dservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::worker::WorkerRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::worker::WorkerRequest, _impl_.data_to_process_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::worker::WorkerReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::worker::WorkerReply, _impl_.processed_data_),
        PROTOBUF_FIELD_OFFSET(::worker::WorkerReply, _impl_.success_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::worker::WorkerRequest)},
        {9, -1, -1, sizeof(::worker::WorkerReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::worker::_WorkerRequest_default_instance_._instance,
    &::worker::_WorkerReply_default_instance_._instance,
};
const char descriptor_table_protodef_worker_2dservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024worker-service.proto\022\006worker\"(\n\rWorker"
    "Request\022\027\n\017data_to_process\030\001 \001(\t\"6\n\013Work"
    "erReply\022\026\n\016processed_data\030\001 \001(\t\022\017\n\007succe"
    "ss\030\002 \001(\0102J\n\rWorkerService\0229\n\013ProcessData"
    "\022\025.worker.WorkerRequest\032\023.worker.WorkerR"
    "eplyb\006proto3"
};
static ::absl::once_flag descriptor_table_worker_2dservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_worker_2dservice_2eproto = {
    false,
    false,
    212,
    descriptor_table_protodef_worker_2dservice_2eproto,
    "worker-service.proto",
    &descriptor_table_worker_2dservice_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_worker_2dservice_2eproto::offsets,
    file_level_enum_descriptors_worker_2dservice_2eproto,
    file_level_service_descriptors_worker_2dservice_2eproto,
};
namespace worker {
// ===================================================================

class WorkerRequest::_Internal {
 public:
};

WorkerRequest::WorkerRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:worker.WorkerRequest)
}
inline PROTOBUF_NDEBUG_INLINE WorkerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::worker::WorkerRequest& from_msg)
      : data_to_process_(arena, from.data_to_process_),
        _cached_size_{0} {}

WorkerRequest::WorkerRequest(
    ::google::protobuf::Arena* arena,
    const WorkerRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WorkerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:worker.WorkerRequest)
}
inline PROTOBUF_NDEBUG_INLINE WorkerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_to_process_(arena),
        _cached_size_{0} {}

inline void WorkerRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WorkerRequest::~WorkerRequest() {
  // @@protoc_insertion_point(destructor:worker.WorkerRequest)
  SharedDtor(*this);
}
inline void WorkerRequest::SharedDtor(MessageLite& self) {
  WorkerRequest& this_ = static_cast<WorkerRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_to_process_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WorkerRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WorkerRequest(arena);
}
constexpr auto WorkerRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WorkerRequest),
                                            alignof(WorkerRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WorkerRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WorkerRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WorkerRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WorkerRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WorkerRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WorkerRequest>(), &WorkerRequest::ByteSizeLong,
            &WorkerRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WorkerRequest, _impl_._cached_size_),
        false,
    },
    &WorkerRequest::kDescriptorMethods,
    &descriptor_table_worker_2dservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WorkerRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> WorkerRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::worker::WorkerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string data_to_process = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerRequest, _impl_.data_to_process_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string data_to_process = 1;
    {PROTOBUF_FIELD_OFFSET(WorkerRequest, _impl_.data_to_process_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\17\0\0\0\0\0\0"
    "worker.WorkerRequest"
    "data_to_process"
  }},
};

PROTOBUF_NOINLINE void WorkerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:worker.WorkerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_to_process_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WorkerRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WorkerRequest& this_ = static_cast<const WorkerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WorkerRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WorkerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:worker.WorkerRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string data_to_process = 1;
          if (!this_._internal_data_to_process().empty()) {
            const std::string& _s = this_._internal_data_to_process();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "worker.WorkerRequest.data_to_process");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:worker.WorkerRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WorkerRequest::ByteSizeLong(const MessageLite& base) {
          const WorkerRequest& this_ = static_cast<const WorkerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WorkerRequest::ByteSizeLong() const {
          const WorkerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:worker.WorkerRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string data_to_process = 1;
            if (!this_._internal_data_to_process().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data_to_process());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WorkerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WorkerRequest*>(&to_msg);
  auto& from = static_cast<const WorkerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:worker.WorkerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_to_process().empty()) {
    _this->_internal_set_data_to_process(from._internal_data_to_process());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkerRequest::CopyFrom(const WorkerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:worker.WorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WorkerRequest::InternalSwap(WorkerRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_to_process_, &other->_impl_.data_to_process_, arena);
}

::google::protobuf::Metadata WorkerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WorkerReply::_Internal {
 public:
};

WorkerReply::WorkerReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:worker.WorkerReply)
}
inline PROTOBUF_NDEBUG_INLINE WorkerReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::worker::WorkerReply& from_msg)
      : processed_data_(arena, from.processed_data_),
        _cached_size_{0} {}

WorkerReply::WorkerReply(
    ::google::protobuf::Arena* arena,
    const WorkerReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WorkerReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:worker.WorkerReply)
}
inline PROTOBUF_NDEBUG_INLINE WorkerReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : processed_data_(arena),
        _cached_size_{0} {}

inline void WorkerReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
WorkerReply::~WorkerReply() {
  // @@protoc_insertion_point(destructor:worker.WorkerReply)
  SharedDtor(*this);
}
inline void WorkerReply::SharedDtor(MessageLite& self) {
  WorkerReply& this_ = static_cast<WorkerReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.processed_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WorkerReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WorkerReply(arena);
}
constexpr auto WorkerReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WorkerReply),
                                            alignof(WorkerReply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WorkerReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WorkerReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WorkerReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WorkerReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WorkerReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WorkerReply>(), &WorkerReply::ByteSizeLong,
            &WorkerReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WorkerReply, _impl_._cached_size_),
        false,
    },
    &WorkerReply::kDescriptorMethods,
    &descriptor_table_worker_2dservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WorkerReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> WorkerReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::worker::WorkerReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WorkerReply, _impl_.success_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerReply, _impl_.success_)}},
    // string processed_data = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WorkerReply, _impl_.processed_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string processed_data = 1;
    {PROTOBUF_FIELD_OFFSET(WorkerReply, _impl_.processed_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool success = 2;
    {PROTOBUF_FIELD_OFFSET(WorkerReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\22\16\0\0\0\0\0\0"
    "worker.WorkerReply"
    "processed_data"
  }},
};

PROTOBUF_NOINLINE void WorkerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:worker.WorkerReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.processed_data_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WorkerReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WorkerReply& this_ = static_cast<const WorkerReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WorkerReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WorkerReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:worker.WorkerReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string processed_data = 1;
          if (!this_._internal_processed_data().empty()) {
            const std::string& _s = this_._internal_processed_data();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "worker.WorkerReply.processed_data");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool success = 2;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_success(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:worker.WorkerReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WorkerReply::ByteSizeLong(const MessageLite& base) {
          const WorkerReply& this_ = static_cast<const WorkerReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WorkerReply::ByteSizeLong() const {
          const WorkerReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:worker.WorkerReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string processed_data = 1;
            if (!this_._internal_processed_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_processed_data());
            }
            // bool success = 2;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WorkerReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WorkerReply*>(&to_msg);
  auto& from = static_cast<const WorkerReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:worker.WorkerReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_processed_data().empty()) {
    _this->_internal_set_processed_data(from._internal_processed_data());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkerReply::CopyFrom(const WorkerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:worker.WorkerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WorkerReply::InternalSwap(WorkerReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.processed_data_, &other->_impl_.processed_data_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata WorkerReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace worker
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_worker_2dservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
