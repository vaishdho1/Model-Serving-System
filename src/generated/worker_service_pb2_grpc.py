# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import worker_service_pb2 as worker__service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in worker_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class WorkerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PushTask = channel.unary_unary(
                '/worker.WorkerService/PushTask',
                request_serializer=worker__service__pb2.TaskRequest.SerializeToString,
                response_deserializer=worker__service__pb2.TaskReply.FromString,
                _registered_method=True)
        self.sendHealthupdate = channel.unary_unary(
                '/worker.WorkerService/sendHealthupdate',
                request_serializer=worker__service__pb2.HealthStatus.SerializeToString,
                response_deserializer=worker__service__pb2.HealthReply.FromString,
                _registered_method=True)
        self.RegisterReplica = channel.unary_unary(
                '/worker.WorkerService/RegisterReplica',
                request_serializer=worker__service__pb2.replicaStatus.SerializeToString,
                response_deserializer=worker__service__pb2.Reply.FromString,
                _registered_method=True)
        self.Ping = channel.unary_unary(
                '/worker.WorkerService/Ping',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=worker__service__pb2.Ack.FromString,
                _registered_method=True)


class WorkerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PushTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendHealthupdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PushTask': grpc.unary_unary_rpc_method_handler(
                    servicer.PushTask,
                    request_deserializer=worker__service__pb2.TaskRequest.FromString,
                    response_serializer=worker__service__pb2.TaskReply.SerializeToString,
            ),
            'sendHealthupdate': grpc.unary_unary_rpc_method_handler(
                    servicer.sendHealthupdate,
                    request_deserializer=worker__service__pb2.HealthStatus.FromString,
                    response_serializer=worker__service__pb2.HealthReply.SerializeToString,
            ),
            'RegisterReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterReplica,
                    request_deserializer=worker__service__pb2.replicaStatus.FromString,
                    response_serializer=worker__service__pb2.Reply.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=worker__service__pb2.Ack.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'worker.WorkerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('worker.WorkerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WorkerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PushTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker.WorkerService/PushTask',
            worker__service__pb2.TaskRequest.SerializeToString,
            worker__service__pb2.TaskReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def sendHealthupdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker.WorkerService/sendHealthupdate',
            worker__service__pb2.HealthStatus.SerializeToString,
            worker__service__pb2.HealthReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker.WorkerService/RegisterReplica',
            worker__service__pb2.replicaStatus.SerializeToString,
            worker__service__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker.WorkerService/Ping',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            worker__service__pb2.Ack.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
