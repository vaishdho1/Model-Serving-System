syntax = "proto3";

package protos;

import "google/protobuf/empty.proto";
import "common.proto";

service ReplicaService {
  
  //rpc sendHealthupdate(HealthStatus) returns (HealthReply);
  rpc RegisterReplica(replicaStatus) returns (Reply);
}

service HeadNodeService{
  // serve-controller
   rpc CreateReplica(ReplicaCreationRequest) returns (ReplicaCreationReply); 
   //Headnode calls
  rpc Ping(google.protobuf.Empty) returns (Ack);
}
message ReplicaCreationRequest {
 
  string base_node_address = 1; // The node which sends request: Currently only headNode is sending
  uint32 deployment_id = 5;
  uint32 num_cpus = 2; //How many cpus
  uint32 num_gpus = 3; //How many gpus
  string deployment_name = 4; //This is the deployment_name associated with the replica for loading the model
}
message ReplicaContent {
  uint32 replica_id = 1;
  string port = 2;
}
message ReplicaCreationReply{
  uint32 worker_id = 1; //The worker id
  repeated ReplicaContent replicas = 2;
  string worker_address = 3;
  bool created = 4;//The status of the replica
  //uint32 deployment_id = 4; // The deployment this belongs to : It loads the model as soon as the request comes
}




/*
message HealthStatus{
  string status = 1;//Whether busy or Idle.This is used for adding more tasks
  string replica_id = 2;//
}

message HealthReply
{
  bool ack = 1; //Just normal replying
}
*/



message replicaStatus
{
  string state = 1;// Whether Alive or Dead
  uint32 replica_id = 2;//The id of the replica
  uint32 pid = 3;
  string port = 4;//The port where this server starts
  uint32 deployment_id = 5;
  string deployment_name = 6;
}

message Reply
{
  bool ack = 1; // Just normmal replying
}
